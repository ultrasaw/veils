name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    container:
      image: debian:13

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Install build-essential
      run: apt-get update && apt-get install -y build-essential

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build library
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Run integration tests
      run: cargo test --test integration_tests --verbose

    - name: Test with all features
      run: cargo test --all-features --verbose

    - name: Build documentation
      run: cargo doc --no-deps --all-features

  sanity-check:
    name: Sanity Check - Deterministic Results
    runs-on: ubuntu-latest
    container:
      image: debian:13
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install build-essential
      run: apt-get update && apt-get install -y build-essential

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-sanity-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Run sanity check tests
      run: |
        echo "Running comprehensive test..."
        cargo run --bin comprehensive_test
        
        echo "Running simple debug test..."
        cargo run --bin simple_debug

  benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    container:
      image: debian:13
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install build-essential
      run: apt-get update && apt-get install -y build-essential

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-bench-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Run benchmarks
      run: cargo test --release -- --bench

  publish-check:
    name: Publish Check
    runs-on: ubuntu-latest
    container:
      image: debian:13
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install build-essential
      run: apt-get update && apt-get install -y build-essential

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-publish-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Check if crate can be published
      run: cargo publish --dry-run

    - name: Verify package contents
      run: |
        cargo package --list
        echo "Checking package size..."
        cargo package 2>&1 | grep "Packaged"
